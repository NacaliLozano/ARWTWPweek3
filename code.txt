#!/usr/bin/env python3

import json
import locale
import sys
import emails
import reports


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_revenue = {"revenue": 0}
  max_sales = {"car":{}, "total_sales": 0}
  years = {}
  max_value = 0
  most_popular_year = 0
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
    if item["total_sales"] > max_sales["total_sales"]:
      max_sales["car"] = item["car"]
      max_sales["total_sales"] = item["total_sales"]
    if item["car"]["car_year"] not in years:
      years[item["car"]["car_year"]] = 0
    years[item["car"]["car_year"]] += item["total_sales"]
  for key, value in years.items():
    if value > max_value:
      max_value = value
      most_popular_year = key
  summary = [
    "The {} generated the most revenue: ${}".format(
      format_car(max_revenue["car"]), max_revenue["revenue"]),
    "The {} had the most sales: {}".format(format_car(max_sales["car"]), max_sales["total_sales"]),
    "The most popular year was {} with {} sales.".format(most_popular_year, max_value)
  ]

  return summary

def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  print(summary)
  reports.generate("/tmp/cars.pdf", "Sales summary for last month", summary[0] + "<br/>" + summary[1] + "<br/>" + summary[2], cars_dict_to_table(data))
  emails.send(emails.generate("automation@example.com", "student-04-fa18e9748795@example.com", "Sales summary for last month", summary[0] + "\n" + summary[1] + "\n" + summary[2], "/tmp/cars.pdf"))



if __name__ == "__main__":
  main(sys.argv)

